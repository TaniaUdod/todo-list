{"version":3,"file":"static/js/890.21e9d765.chunk.js","mappings":"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","sources":["webpack://todo-list/./src/components/TaskEditForm/TaskEditForm.module.scss?6499","components/TaskEditForm/TaskEditForm.tsx","webpack://todo-list/./src/components/TodoItem/TodoItem.module.scss?994a","components/TodoItem/TodoItem.tsx","store/selectors.ts","components/TodoList/TodoList.tsx","pages/DeletedTasks/DeletedTasks.tsx","store/hooks.ts","webpack://todo-list/./src/pages/AllTasks/AllTasks.module.scss?d051"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form-edit\":\"TaskEditForm_form-edit__jGCVi\",\"save\":\"TaskEditForm_save__LvB1L\",\"cancel\":\"TaskEditForm_cancel__VfGPf\"};","import { FC, FormEvent, useState } from \"react\";\r\nimport { Task } from \"../../types/types\";\r\nimport css from \"./TaskEditForm.module.scss\";\r\n\r\ninterface TaskEditFormProps {\r\n  task: Task;\r\n  onSave: (updatedTask: Task) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst TaskEditForm: FC<TaskEditFormProps> = ({ task, onSave, onCancel }) => {\r\n  const [editedTitle, setEditedTitle] = useState(task.title);\r\n\r\n  const handleSubmit = (event: FormEvent) => {\r\n    event.preventDefault();\r\n    const updatedTask: Task = { ...task, title: editedTitle };\r\n    onSave(updatedTask);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    onCancel();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={css[\"form-edit\"]}>\r\n      <input\r\n        type=\"text\"\r\n        value={editedTitle}\r\n        onChange={(event) => setEditedTitle(event.target.value)}\r\n      />\r\n      <button type=\"submit\" className={css.save}>\r\n        Save\r\n      </button>\r\n      <button type=\"button\" onClick={handleCancel} className={css.cancel}>\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskEditForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"todo-item\":\"TodoItem_todo-item__JiqsP\",\"edit\":\"TodoItem_edit__5qtk6\",\"delete\":\"TodoItem_delete__QX5uI\",\"restore\":\"TodoItem_restore__s9GAv\"};","import { FC, useState } from \"react\";\r\nimport { Task } from \"../../types/types\";\r\nimport { useAppDispatch } from \"../../store/hooks\";\r\nimport { toggleTaskDeleted, updateTask } from \"../../store/tasksSlice\";\r\nimport TaskEditForm from \"../TaskEditForm/TaskEditForm\";\r\nimport toast from \"react-hot-toast\";\r\nimport css from \"./TodoItem.module.scss\";\r\n\r\ninterface TodoItemProps {\r\n  task: Task;\r\n  onRestore?: () => void;\r\n}\r\n\r\nconst TodoItem: FC<TodoItemProps> = ({ task, onRestore }) => {\r\n  const dispatch = useAppDispatch();\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const handleDelete = () => {\r\n    dispatch(toggleTaskDeleted(task.id));\r\n    toast.success(\"Task deleted successfully\", { position: \"top-right\" });\r\n  };\r\n\r\n  const handleRestore = () => {\r\n    if (onRestore) {\r\n      onRestore();\r\n    }\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSaveEdit = (updatedTask: Task) => {\r\n    dispatch(updateTask(updatedTask));\r\n    toast.success(\"Task updated successfully\", { position: \"top-right\" });\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <li className={css[\"todo-item\"]}>\r\n      {isEditing ? (\r\n        <TaskEditForm\r\n          task={task}\r\n          onSave={handleSaveEdit}\r\n          onCancel={handleCancel}\r\n        />\r\n      ) : (\r\n        <>\r\n          <span>{task.title}</span>\r\n\r\n          {onRestore ? (\r\n            <button onClick={handleRestore} className={css.restore}>\r\n              Restore\r\n            </button>\r\n          ) : (\r\n            <>\r\n              <button onClick={handleEdit} className={css.edit}>\r\n                Edit\r\n              </button>\r\n              <button onClick={handleDelete} className={css.delete}>\r\n                Delete\r\n              </button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"./store\";\r\n\r\nexport const selectTasks = (state: RootState) => state.tasks;\r\n\r\nexport const selectItems = createSelector(\r\n  [selectTasks],\r\n  (tasks) => tasks.items\r\n);\r\n\r\nexport const selectDeletedTasks = createSelector(\r\n  [selectTasks],\r\n  (tasks) => tasks.deletedTasks\r\n);\r\n","import { FC } from \"react\";\r\nimport { useAppSelector } from \"../../store/hooks\";\r\nimport TodoItem from \"../TodoItem/TodoItem\";\r\nimport { selectItems, selectDeletedTasks } from \"../../store/selectors\";\r\nimport { Task } from \"../../types/types\";\r\nimport toast from \"react-hot-toast\";\r\n\r\ninterface TodoListProps {\r\n  deleted?: boolean;\r\n  onRestore?: (taskId: string) => void;\r\n}\r\n\r\nconst TodoList: FC<TodoListProps> = ({ deleted = false, onRestore }) => {\r\n  const tasks = useAppSelector(deleted ? selectDeletedTasks : selectItems);\r\n\r\n  const handleRestore = (taskId: string) => {\r\n    if (onRestore) {\r\n      onRestore(taskId);\r\n      toast.success(\"Task restored successfully\", { position: \"top-right\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {tasks.map((task: Task) => (\r\n        <TodoItem\r\n          key={task.id}\r\n          task={task}\r\n          onRestore={deleted ? () => handleRestore(task.id) : undefined}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport TodoList from \"../../components/TodoList/TodoList\";\r\nimport { useAppDispatch } from \"../../store/hooks\";\r\nimport { toggleTaskDeleted } from \"../../store/tasksSlice\";\r\nimport css from \"../AllTasks/AllTasks.module.scss\";\r\n\r\nconst DeletedTasks: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleRestoreTask = (taskId: string) => {\r\n    dispatch(toggleTaskDeleted(taskId));\r\n  };\r\n\r\n  return (\r\n    <div className={css.tasks}>\r\n      <h2>Deleted Tasks</h2>\r\n      <TodoList deleted={true} onRestore={handleRestoreTask} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeletedTasks;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"./store\";\r\n\r\nexport const useAppDispatch = useDispatch.withTypes<AppDispatch>();\r\nexport const useAppSelector = useSelector.withTypes<RootState>();\r\n","// extracted by mini-css-extract-plugin\nexport default {\"tasks\":\"AllTasks_tasks__m1Fhh\"};"],"names":["_ref","task","onSave","onCancel","editedTitle","setEditedTitle","useState","title","_jsxs","onSubmit","event","preventDefault","updatedTask","className","css","children","_jsx","type","value","onChange","target","onClick","handleCancel","onRestore","dispatch","useAppDispatch","isEditing","setIsEditing","TaskEditForm","updateTask","toast","success","position","_Fragment","handleRestore","handleEdit","handleDelete","toggleTaskDeleted","id","selectTasks","state","tasks","selectItems","createSelector","items","selectDeletedTasks","deletedTasks","deleted","useAppSelector","map","TodoItem","taskId","undefined","DeletedTasks","TodoList","useDispatch","withTypes","useSelector"],"sourceRoot":""}